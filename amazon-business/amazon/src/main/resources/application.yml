spring:
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USER}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    database: postgresql
    properties:
      hibernate:
      dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  security:
    jwt:
      expiration: 86400000
      refresh-token: 604800000
stripe:
  secretKey: sk_test_51QmY6sKjA1yq8LJUKUlrInhO0gqPEZ5jBzhMB8mDwJi36Hdq15PchiMvlSb1hFmAug8kR8TsywZfoNtK1dmJw5V200idxr296R
  primaryKey: pk_test_51QmY6sKjA1yq8LJURSMgR5gAGl0o8A9pJVWw36tUm7PqlsY5SJ2l5VQmW5omn2i2j2LbR83iObBnjAPGjk43tm1v00TL9f7gff
client:
  end-point: ${FRONT_END_SOURCE}
#  security:
#    oauth2:
#      client:
#        registration:
#          google:
#            client-id: YOUR_CLIENT_ID
#            client-secret: YOUR_CLIENT_SECRET
#            scope: profile, email
#            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
#        provider:
#          google:
#            authorization-uri: https://accounts.google.com/o/oauth2/auth
#            token-uri: https://oauth2.googleapis.com/token
#            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
#            user-name-attribute: sub



